name: CI

on:
  push:
    branches:
      - main

  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        id: setup-python
        with:
          python-version-file: '.python-version'

      - name: Install flake
        run: pip install flake8

      - name: Install dependencies
        run: |
          python -m venv venv
          . venv/bin/activate
          pip install --upgrade pip pip-tools
          pip-sync requirements.txt

      - name: Run the linter
        run: |
          . venv/bin/activate
          flake8 ./
    
  test:
    needs: lint
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: secret
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:latest
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        id: setup-python
        with:
          python-version-file: '.python-version'
          
      - name: Install dependencies
        run: |
          python -m venv venv
          . venv/bin/activate
          pip install --upgrade pip pip-tools
          pip-sync requirements.txt

      - name: Run the tests
        run: |
          . venv/bin/activate
          pytest -v ./
        env:
          DB_URL: ${{ secrets.DB_URL }}
          TEST_DB_URL: ${{ secrets.TEST_DB_URL }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          SECRET: ${{ secrets.SECRET }}
          CELERY_HOST: ${{ secrets.CELERY_HOST }}
          CELERY_PORT: ${{ secrets.CELERY_PORT }}

          
  build-docker-image:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
          
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Generate image identifier
        id: image
        uses: ASzc/change-string-case-action@v4
        with:
          string: ${{ github.repository_owner }}
          
      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.TOKEN }}
          
      - name: Build web image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: |
            ghcr.io/${{ steps.image.outputs.lowercase }}/fastapi:latest
            ghcr.io/${{ steps.image.outputs.lowercase }}/fastapi:${{ github.sha }}

          build-args: |
            RELEASE=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
